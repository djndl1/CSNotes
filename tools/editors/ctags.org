#+title: Ctags

An indexing tool that collects names of programming languages in source files to
aid code comprehension. It is required by the Single Unix Base Specification.
CTags may fall behind LSP, but it is still a useful for large projects and languages that miss
LSP support.

* Use

#+begin_src shell
ctags -R # recursively
--exclude=pattern # exclude files and directories
-e # etags format
--langauges=c,c++ # set langauges of tag generation
#+end_src

* Implementations

- Etags: bundled with GNU Emacs

- *Exuberant Tags*: originally distributed with Vim. An enhanced ctags,
  unmaintained since 2009.

- [[https://ctags.io][*Universal Tags*]]: forked from Exuberant Tags
  + support for various languages
  + support for etags format

* Tag Format

** Standard

#+begin_src
{tagname}\t{tagfile}\t{tagaddresss}
#+end_src

where ={tagaddress}= contains =ex= mode command that locates the tag.

** Enhanced

#+begin_src ctags
tagname	filename	search_pattern[;attr1:vaue1	attr2:value2 ...]
#+end_src


** Etags

Normally named =TAGS=.

#+begin_src
\0x0c
{src_file},{size_of_tag_definition_data_in_bytes}
{tag_def_text}\x7f{tagname}\0x01{line_number},{byte_offset}
#+end_src


* Editor Support

Supported by most code editors.

** Vim/Vi

Tag search supports not only tag names but also patterns.

- /Go to a tag/: =:ta[g] tagname | /regex=
  + =:stag=, =Ctrl-W= + =]= in a split window

- /Go to the tag at the cursor/: =^]=, =g<LeftMouse>=, =<C-LeftMouse>=

- Searched tags are saved into a stack of tag locations. One may return to a
  saved location using =^T=, =<C-RightMouse=, =g<RightMouse>=. The proper way
  to return is =^T=, even if =^O= also works.
  + useful for navigating up and down a call hierarchy.
  + =tags= shows the contents of the tag stack.

- /Search a matching tag/: =:ts[elect] name=
  + =sts name= splits the window to show the selected tag
  + =tj[ump] name=, =stj[ump] name=, =g^J= (may be used with visual selection) jump when there is only one match.
  + =Ctrl-W= + =G= + =Ctrl-]= perform =tjump= in a split window
  + =Ctrl-W= + =G= + =]= perform =tselect= in a split window

- /Search the tag at the cursor/: =g]= (may be combined with visual selection)

- /Jump to the next/previous matching tag/: =tn[ext]=, =tp[revious]=,
  =tf[irst]= (the first matching tag), =tl[ast]= (to the last matching tag)
  + a tag may be defined in multiple locations.

*** Preview

- =CTRl-W_}=, =:pt=, =:pts=, =:ptj=, =:ptn=, =:ptp=, =:ptf=, =:ptp= show the tag in a preview
  window, closable with =^Wz=

*** Plugins

- [[https://github.com/ludovicchabant/vim-gutentags][gutentags]]: automatically generates the =tags= file in the background.

- [[https://github.com/preservim/tagbar][Tagbar]]: A tag display side window.
